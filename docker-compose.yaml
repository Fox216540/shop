services:
  #  test-db:
  #    image: postgres:17.3
  #    profiles: [ "test" ]
  #    env_file:
  #      - ".env"  # Подключаем файл .env
  #    environment:
  #      POSTGRES_USER: ${POSTGRES_USER}
  #      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #      POSTGRES_DB: ${POSTGRES_DB}
  #    ports:
  #      - "${POSTGRES_PORT}:5432"
  #    networks:
  #      - test_network
  #    healthcheck:
  #      test: [ "CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'" ]
  #      interval: 5s
  #      timeout: 5s
  #      retries: 5
  #  test-redis:
  #    profiles: [ "test" ]
  #    image: redis:7.0-alpine
  #    ports:
  #      - "${REDIS_PORT}:6379"
  #    networks:
  #      - test_network
  db:
    image: postgres:17.3
    container_name: db
    #    profiles: [ "prod" ]
    env_file:
      - ".env"  # Подключаем файл .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - my_network
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'" ]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    #    profiles: [ "prod" ]
    image: redis:7.0-alpine
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - my_network


networks:
  my_network:
    driver: bridge
#  test_network:
#    driver: bridge

volumes:
  postgres_data:
  redis_data:
